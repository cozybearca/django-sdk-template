#!/usr/bin/env python3

import os
from pathlib import Path
from subprocess import run

import click

SITE_ROOT = Path(os.environ["SITE_ROOT"])
TS_SCHEMA_CLASSES_DIR = SITE_ROOT / "src/web/base/clientlib/models/json_schema"
TS_MODEL_CLASSES_DIR = SITE_ROOT / "src/web/base/clientlib/models"
JSON_SCHEMA_DIR = "/tmp/json_schema"

prettier_options = [
    "--print-width",
    "88",
    "--tab-width",
    "4",
    "--no-semi",
    "--trailing-comma",
    "es5",
]


@click.command()
def main():
    output_schema_classes()
    output_model_classes()
    output_index_file()
    run(["prettier", "-w", TS_MODEL_CLASSES_DIR, *prettier_options], check=True)
    run(["prettier", "-w", TS_SCHEMA_CLASSES_DIR, *prettier_options], check=True)


def output_schema_classes():
    run(["genjsonschema"], check=True)

    for file in JSON_SCHEMA_DIR.iterdir():
        typescript = run(
            ["json2ts", file], capture_output=True, text=True, check=True
        ).stdout

        dest = TS_SCHEMA_CLASSES_DIR / f"{file.stem}.ts"
        dest.parent.mkdir(parents=True, exist_ok=True)

        print(dest)
        dest.write_text(typescript)


def output_model_classes():
    for file in TS_SCHEMA_CLASSES_DIR.iterdir():
        dest = TS_MODEL_CLASSES_DIR / file.name
        if dest.exists():
            continue
        model_name = file.stem
        content = f"""
            import {{ {model_name}JSONSchema }} from "./json_schema/{model_name}"

            export class {model_name} extends {model_name}JSONSchema {{
                static objects = new m.CollectionManager({model_name})
            }}
        """
        print(dest)
        dest.write_text(content)


def output_index_file():
    models = [
        file.stem for file in TS_SCHEMA_CLASSES_DIR.iterdir() if file.stem != "index"
    ]
    dest = TS_MODEL_CLASSES_DIR / "index.ts"
    content = """
    /**
     * This file is generated by tsmodels. Do Not Modify.
     */
    """
    for model in models:
        content += f"export {{ {model} }} from './{model}'\n"
    dest.write_text(content)


if __name__ == "__main__":
    main()
